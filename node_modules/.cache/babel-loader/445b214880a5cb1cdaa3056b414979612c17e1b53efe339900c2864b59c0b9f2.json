{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\PERSONAL PROJECTS\\\\New folder (2)\\\\veuz\\\\src\\\\Components\\\\OnePagePerSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport formData from \"../JSON/formData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnePagePerSection = () => {\n  _s();\n  const {\n    formId\n  } = useParams();\n  const form = formData[formId];\n  const questions = form === null || form === void 0 ? void 0 : form.fields;\n  const sections = [...new Set(questions.map(q => q.sectionId))];\n  const [answers, setAnswers] = useState({});\n  const handleChange = (fieldId, value) => {\n    setAnswers({\n      ...answers,\n      [fieldId]: value\n    });\n  };\n  const handleSubmit = () => {\n    console.log('Selected Answers:', answers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [sections.map(sectionId => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: [\"Section \", sectionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: questions.filter(q => q.sectionId === sectionId).map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-4 col-lg-4 col-md-6 col-sm-12 mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card p-3 border\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: question.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this), question.type === 'textbox' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: question.placeholder,\n                onChange: e => handleChange(question.fieldId, e.target.value),\n                required: question.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 45\n              }, this), question.type === 'email' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                placeholder: question.placeholder,\n                onChange: e => handleChange(question.fieldId, e.target.value),\n                required: question.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 45\n              }, this), question.type === 'date' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control\",\n                onChange: e => handleChange(question.fieldId, e.target.value),\n                required: question.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this), question.type === 'radio' && question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: question.fieldId,\n                  value: option.label,\n                  onChange: () => handleChange(question.fieldId, option.label),\n                  required: question.required\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 49\n                }, this)]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this)), question.type === 'checkbox' && question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: question.fieldId,\n                  value: option.label,\n                  required: question.required,\n                  onChange: e => {\n                    const currentAnswers = answers[question.fieldId] || [];\n                    if (e.target.checked) {\n                      handleChange(question.fieldId, [...currentAnswers, option.label]);\n                    } else {\n                      handleChange(question.fieldId, currentAnswers.filter(item => item !== option.label));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 49\n                }, this)]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this)), question.type === 'selectbox' && /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                required: question.required,\n                onChange: e => handleChange(question.fieldId, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: question.placeholder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 49\n                }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.label,\n                  children: option.label\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 45\n              }, this), question.type === 'textarea' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n                required: question.required,\n                className: \"form-control\",\n                placeholder: question.placeholder,\n                onChange: e => handleChange(question.fieldId, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)\n          }, question.fieldId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, sectionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(OnePagePerSection, \"bIHgs2dCazMQ17tldsbM27gnPJ0=\", false, function () {\n  return [useParams];\n});\n_c = OnePagePerSection;\nexport default OnePagePerSection;\nvar _c;\n$RefreshReg$(_c, \"OnePagePerSection\");","map":{"version":3,"names":["React","useState","useParams","formData","jsxDEV","_jsxDEV","OnePagePerSection","_s","formId","form","questions","fields","sections","Set","map","q","sectionId","answers","setAnswers","handleChange","fieldId","value","handleSubmit","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","question","label","type","placeholder","onChange","e","target","required","options","option","name","id","currentAnswers","checked","item","onClick","_c","$RefreshReg$"],"sources":["D:/PROJECTS/PERSONAL PROJECTS/New folder (2)/veuz/src/Components/OnePagePerSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport formData from \"../JSON/formData.json\";\r\n\r\nconst OnePagePerSection = () => {\r\n    const { formId } = useParams();\r\n    const form = formData[formId];\r\n    const questions = form?.fields;\r\n    const sections = [...new Set(questions.map(q => q.sectionId))];\r\n    const [answers, setAnswers] = useState({});\r\n\r\n    const handleChange = (fieldId, value) => {\r\n        setAnswers({\r\n            ...answers,\r\n            [fieldId]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        console.log('Selected Answers:', answers);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {sections.map(sectionId => (\r\n                <div key={sectionId} className=\"mb-4\">\r\n                    <h2 className='text-center'>Section {sectionId}</h2>\r\n                    <div className=\"p-3 mt-3\">\r\n                        <div className=\"row justify-content-center\">\r\n                            {questions.filter(q => q.sectionId === sectionId).map((question) => (\r\n                                <div key={question.fieldId} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 mb-3\">\r\n                                    <div className=\"card p-3 border\">\r\n                                        <label>{question.label}</label>\r\n                                        {question.type === 'textbox' && (\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder={question.placeholder}\r\n                                                onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n                                                required={question.required}\r\n                                            />\r\n                                        )}\r\n                                        {question.type === 'email' && (\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                placeholder={question.placeholder}\r\n                                                onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n                                                required={question.required}\r\n                                            />\r\n                                        )}\r\n                                        {question.type === 'date' && (\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n                                                required={question.required}\r\n                                            />\r\n                                        )}\r\n                                        {question.type === 'radio' && question.options.map(option => (\r\n                                            <div key={option.id}>\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    name={question.fieldId}\r\n                                                    value={option.label}\r\n                                                    onChange={() => handleChange(question.fieldId, option.label)}\r\n                                                    required={question.required}\r\n                                                />\r\n                                                <label>{option.label}</label>\r\n                                            </div>\r\n                                        ))}\r\n                                        {question.type === 'checkbox' && question.options.map(option => (\r\n                                            <div key={option.id}>\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    name={question.fieldId}\r\n                                                    value={option.label}\r\n                                                    required={question.required}\r\n                                                    onChange={(e) => {\r\n                                                        const currentAnswers = answers[question.fieldId] || [];\r\n                                                        if (e.target.checked) {\r\n                                                            handleChange(question.fieldId, [...currentAnswers, option.label]);\r\n                                                        } else {\r\n                                                            handleChange(question.fieldId, currentAnswers.filter(item => item !== option.label));\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                                <label>{option.label}</label>\r\n                                            </div>\r\n                                        ))}\r\n                                        {question.type === 'selectbox' && (\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                required={question.required}\r\n                                                onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n                                            >\r\n                                                <option value=\"\">{question.placeholder}</option>\r\n                                                {question.options.map(option => (\r\n                                                    <option key={option.id} value={option.label}>{option.label}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        )}\r\n                                        {question.type === 'textarea' && (\r\n                                            <textarea\r\n                                                required={question.required}\r\n                                                className=\"form-control\"\r\n                                                placeholder={question.placeholder}\r\n                                                onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <div className=\"text-center mt-4\">\r\n                <button className=\"btn btn-primary\" onClick={handleSubmit}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OnePagePerSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAMO,IAAI,GAAGN,QAAQ,CAACK,MAAM,CAAC;EAC7B,MAAME,SAAS,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM;EAC9B,MAAMC,QAAQ,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACH,SAAS,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMkB,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IACrCH,UAAU,CAAC;MACP,GAAGD,OAAO;MACV,CAACG,OAAO,GAAGC;IACf,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,OAAO,CAAC;EAC7C,CAAC;EAED,oBACIZ,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBd,QAAQ,CAACE,GAAG,CAACE,SAAS,iBACnBX,OAAA;MAAqBoB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjCrB,OAAA;QAAIoB,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,UAAQ,EAACV,SAAS;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpDzB,OAAA;QAAKoB,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBrB,OAAA;UAAKoB,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EACtChB,SAAS,CAACqB,MAAM,CAAChB,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKA,SAAS,CAAC,CAACF,GAAG,CAAEkB,QAAQ,iBAC3D3B,OAAA;YAA4BoB,SAAS,EAAC,2CAA2C;YAAAC,QAAA,eAC7ErB,OAAA;cAAKoB,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC5BrB,OAAA;gBAAAqB,QAAA,EAAQM,QAAQ,CAACC;cAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC9BE,QAAQ,CAACE,IAAI,KAAK,SAAS,iBACxB7B,OAAA;gBACI6B,IAAI,EAAC,MAAM;gBACXT,SAAS,EAAC,cAAc;gBACxBU,WAAW,EAAEH,QAAQ,CAACG,WAAY;gBAClCC,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEiB,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;gBAChEkB,QAAQ,EAAEP,QAAQ,CAACO;cAAS;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CACJ,EACAE,QAAQ,CAACE,IAAI,KAAK,OAAO,iBACtB7B,OAAA;gBACI6B,IAAI,EAAC,OAAO;gBACZT,SAAS,EAAC,cAAc;gBACxBU,WAAW,EAAEH,QAAQ,CAACG,WAAY;gBAClCC,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEiB,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;gBAChEkB,QAAQ,EAAEP,QAAQ,CAACO;cAAS;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CACJ,EACAE,QAAQ,CAACE,IAAI,KAAK,MAAM,iBACrB7B,OAAA;gBACI6B,IAAI,EAAC,MAAM;gBACXT,SAAS,EAAC,cAAc;gBACxBW,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEiB,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;gBAChEkB,QAAQ,EAAEP,QAAQ,CAACO;cAAS;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CACJ,EACAE,QAAQ,CAACE,IAAI,KAAK,OAAO,IAAIF,QAAQ,CAACQ,OAAO,CAAC1B,GAAG,CAAC2B,MAAM,iBACrDpC,OAAA;gBAAAqB,QAAA,gBACIrB,OAAA;kBACI6B,IAAI,EAAC,OAAO;kBACZQ,IAAI,EAAEV,QAAQ,CAACZ,OAAQ;kBACvBC,KAAK,EAAEoB,MAAM,CAACR,KAAM;kBACpBG,QAAQ,EAAEA,CAAA,KAAMjB,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEqB,MAAM,CAACR,KAAK,CAAE;kBAC7DM,QAAQ,EAAEP,QAAQ,CAACO;gBAAS;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B,CAAC,eACFzB,OAAA;kBAAAqB,QAAA,EAAQe,MAAM,CAACR;gBAAK;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GARvBW,MAAM,CAACE,EAAE;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASd,CACR,CAAC,EACDE,QAAQ,CAACE,IAAI,KAAK,UAAU,IAAIF,QAAQ,CAACQ,OAAO,CAAC1B,GAAG,CAAC2B,MAAM,iBACxDpC,OAAA;gBAAAqB,QAAA,gBACIrB,OAAA;kBACI6B,IAAI,EAAC,UAAU;kBACfQ,IAAI,EAAEV,QAAQ,CAACZ,OAAQ;kBACvBC,KAAK,EAAEoB,MAAM,CAACR,KAAM;kBACpBM,QAAQ,EAAEP,QAAQ,CAACO,QAAS;kBAC5BH,QAAQ,EAAGC,CAAC,IAAK;oBACb,MAAMO,cAAc,GAAG3B,OAAO,CAACe,QAAQ,CAACZ,OAAO,CAAC,IAAI,EAAE;oBACtD,IAAIiB,CAAC,CAACC,MAAM,CAACO,OAAO,EAAE;sBAClB1B,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAE,CAAC,GAAGwB,cAAc,EAAEH,MAAM,CAACR,KAAK,CAAC,CAAC;oBACrE,CAAC,MAAM;sBACHd,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEwB,cAAc,CAACb,MAAM,CAACe,IAAI,IAAIA,IAAI,KAAKL,MAAM,CAACR,KAAK,CAAC,CAAC;oBACxF;kBACJ;gBAAE;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eACFzB,OAAA;kBAAAqB,QAAA,EAAQe,MAAM,CAACR;gBAAK;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAfvBW,MAAM,CAACE,EAAE;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBd,CACR,CAAC,EACDE,QAAQ,CAACE,IAAI,KAAK,WAAW,iBAC1B7B,OAAA;gBACIoB,SAAS,EAAC,cAAc;gBACxBc,QAAQ,EAAEP,QAAQ,CAACO,QAAS;gBAC5BH,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEiB,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;gBAAAK,QAAA,gBAEhErB,OAAA;kBAAQgB,KAAK,EAAC,EAAE;kBAAAK,QAAA,EAAEM,QAAQ,CAACG;gBAAW;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,EAC/CE,QAAQ,CAACQ,OAAO,CAAC1B,GAAG,CAAC2B,MAAM,iBACxBpC,OAAA;kBAAwBgB,KAAK,EAAEoB,MAAM,CAACR,KAAM;kBAAAP,QAAA,EAAEe,MAAM,CAACR;gBAAK,GAA7CQ,MAAM,CAACE,EAAE;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAA6C,CACtE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CACX,EACAE,QAAQ,CAACE,IAAI,KAAK,UAAU,iBACzB7B,OAAA;gBACIkC,QAAQ,EAAEP,QAAQ,CAACO,QAAS;gBAC5Bd,SAAS,EAAC,cAAc;gBACxBU,WAAW,EAAEH,QAAQ,CAACG,WAAY;gBAClCC,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAACa,QAAQ,CAACZ,OAAO,EAAEiB,CAAC,CAACC,MAAM,CAACjB,KAAK;cAAE;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnE,CACJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC,GAhFAE,QAAQ,CAACZ,OAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiFrB,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,GAzFAd,SAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0Fd,CACR,CAAC,eACFzB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BrB,OAAA;QAAQoB,SAAS,EAAC,iBAAiB;QAACsB,OAAO,EAAEzB,YAAa;QAAAI,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvB,EAAA,CAtHID,iBAAiB;EAAA,QACAJ,SAAS;AAAA;AAAA8C,EAAA,GAD1B1C,iBAAiB;AAwHvB,eAAeA,iBAAiB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}