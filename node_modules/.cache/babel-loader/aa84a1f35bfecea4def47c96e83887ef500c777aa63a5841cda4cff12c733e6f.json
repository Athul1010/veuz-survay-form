{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import formData from \"../JSON/formData.json\";\n\n// const OnePagePerSection = () => {\n//     const { formId } = useParams();\n//     const form = formData[formId];\n//     const questions = form?.fields;\n//     const sections = [...new Set(questions.map(q => q.sectionId))];\n//     const [answers, setAnswers] = useState({});\n\n//     const handleChange = (fieldId, value) => {\n//         setAnswers({\n//             ...answers,\n//             [fieldId]: value,\n//         });\n//     };\n\n//     const handleSubmit = () => {\n//         console.log('Selected Answers:', answers);\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             {sections.map(sectionId => (\n//                 <div key={sectionId} className=\"mb-4\">\n//                     <h2 className='text-center'>Section {sectionId}</h2>\n//                     <div className=\"p-3 mt-3\">\n//                         <div className=\"row justify-content-center\">\n//                             {questions.filter(q => q.sectionId === sectionId).map((question) => (\n//                                 <div key={question.fieldId} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 mb-3\">\n//                                     <div className=\"card p-3 border\">\n//                                         <label>{question.label}</label>\n//                                         {question.type === 'textbox' && (\n//                                             <input\n//                                                 type=\"text\"\n//                                                 className=\"form-control\"\n//                                                 placeholder={question.placeholder}\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\n//                                             />\n//                                         )}\n//                                         {question.type === 'email' && (\n//                                             <input\n//                                                 type=\"email\"\n//                                                 className=\"form-control\"\n//                                                 placeholder={question.placeholder}\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\n//                                             />\n//                                         )}\n//                                         {question.type === 'date' && (\n//                                             <input\n//                                                 type=\"date\"\n//                                                 className=\"form-control\"\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\n//                                             />\n//                                         )}\n//                                         {question.type === 'radio' && question.options.map(option => (\n//                                             <div key={option.id}>\n//                                                 <input\n//                                                     type=\"radio\"\n//                                                     name={question.fieldId}\n//                                                     value={option.label}\n//                                                     onChange={() => handleChange(question.fieldId, option.label)}\n//                                                 />\n//                                                 <label>{option.label}</label>\n//                                             </div>\n//                                         ))}\n//                                         {question.type === 'checkbox' && question.options.map(option => (\n//                                             <div key={option.id}>\n//                                                 <input\n//                                                     type=\"checkbox\"\n//                                                     name={question.fieldId}\n//                                                     value={option.label}\n//                                                     onChange={(e) => {\n//                                                         const currentAnswers = answers[question.fieldId] || [];\n//                                                         if (e.target.checked) {\n//                                                             handleChange(question.fieldId, [...currentAnswers, option.label]);\n//                                                         } else {\n//                                                             handleChange(question.fieldId, currentAnswers.filter(item => item !== option.label));\n//                                                         }\n//                                                     }}\n//                                                 />\n//                                                 <label>{option.label}</label>\n//                                             </div>\n//                                         ))}\n//                                         {question.type === 'selectbox' && (\n//                                             <select\n//                                                 className=\"form-control\"\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\n//                                             >\n//                                                 <option value=\"\">{question.placeholder}</option>\n//                                                 {question.options.map(option => (\n//                                                     <option key={option.id} value={option.label}>{option.label}</option>\n//                                                 ))}\n//                                             </select>\n//                                         )}\n//                                         {question.type === 'textarea' && (\n//                                             <textarea\n//                                                 className=\"form-control\"\n//                                                 placeholder={question.placeholder}\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\n//                                             />\n//                                         )}\n//                                     </div>\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     </div>\n//                 </div>\n//             ))}\n//             <div className=\"text-center mt-4\">\n//                 <button className=\"btn btn-primary\" onClick={handleSubmit}>Submit</button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default OnePagePerSection;","map":{"version":3,"names":[],"sources":["D:/PROJECTS/PERSONAL PROJECTS/New folder (2)/veuz/src/Components/OnePagePerSection.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import formData from \"../JSON/formData.json\";\r\n\r\n// const OnePagePerSection = () => {\r\n//     const { formId } = useParams();\r\n//     const form = formData[formId];\r\n//     const questions = form?.fields;\r\n//     const sections = [...new Set(questions.map(q => q.sectionId))];\r\n//     const [answers, setAnswers] = useState({});\r\n\r\n//     const handleChange = (fieldId, value) => {\r\n//         setAnswers({\r\n//             ...answers,\r\n//             [fieldId]: value,\r\n//         });\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         console.log('Selected Answers:', answers);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             {sections.map(sectionId => (\r\n//                 <div key={sectionId} className=\"mb-4\">\r\n//                     <h2 className='text-center'>Section {sectionId}</h2>\r\n//                     <div className=\"p-3 mt-3\">\r\n//                         <div className=\"row justify-content-center\">\r\n//                             {questions.filter(q => q.sectionId === sectionId).map((question) => (\r\n//                                 <div key={question.fieldId} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 mb-3\">\r\n//                                     <div className=\"card p-3 border\">\r\n//                                         <label>{question.label}</label>\r\n//                                         {question.type === 'textbox' && (\r\n//                                             <input\r\n//                                                 type=\"text\"\r\n//                                                 className=\"form-control\"\r\n//                                                 placeholder={question.placeholder}\r\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n//                                             />\r\n//                                         )}\r\n//                                         {question.type === 'email' && (\r\n//                                             <input\r\n//                                                 type=\"email\"\r\n//                                                 className=\"form-control\"\r\n//                                                 placeholder={question.placeholder}\r\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n//                                             />\r\n//                                         )}\r\n//                                         {question.type === 'date' && (\r\n//                                             <input\r\n//                                                 type=\"date\"\r\n//                                                 className=\"form-control\"\r\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n//                                             />\r\n//                                         )}\r\n//                                         {question.type === 'radio' && question.options.map(option => (\r\n//                                             <div key={option.id}>\r\n//                                                 <input\r\n//                                                     type=\"radio\"\r\n//                                                     name={question.fieldId}\r\n//                                                     value={option.label}\r\n//                                                     onChange={() => handleChange(question.fieldId, option.label)}\r\n//                                                 />\r\n//                                                 <label>{option.label}</label>\r\n//                                             </div>\r\n//                                         ))}\r\n//                                         {question.type === 'checkbox' && question.options.map(option => (\r\n//                                             <div key={option.id}>\r\n//                                                 <input\r\n//                                                     type=\"checkbox\"\r\n//                                                     name={question.fieldId}\r\n//                                                     value={option.label}\r\n//                                                     onChange={(e) => {\r\n//                                                         const currentAnswers = answers[question.fieldId] || [];\r\n//                                                         if (e.target.checked) {\r\n//                                                             handleChange(question.fieldId, [...currentAnswers, option.label]);\r\n//                                                         } else {\r\n//                                                             handleChange(question.fieldId, currentAnswers.filter(item => item !== option.label));\r\n//                                                         }\r\n//                                                     }}\r\n//                                                 />\r\n//                                                 <label>{option.label}</label>\r\n//                                             </div>\r\n//                                         ))}\r\n//                                         {question.type === 'selectbox' && (\r\n//                                             <select\r\n//                                                 className=\"form-control\"\r\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n//                                             >\r\n//                                                 <option value=\"\">{question.placeholder}</option>\r\n//                                                 {question.options.map(option => (\r\n//                                                     <option key={option.id} value={option.label}>{option.label}</option>\r\n//                                                 ))}\r\n//                                             </select>\r\n//                                         )}\r\n//                                         {question.type === 'textarea' && (\r\n//                                             <textarea\r\n//                                                 className=\"form-control\"\r\n//                                                 placeholder={question.placeholder}\r\n//                                                 onChange={(e) => handleChange(question.fieldId, e.target.value)}\r\n//                                             />\r\n//                                         )}\r\n//                                     </div>\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             ))}\r\n//             <div className=\"text-center mt-4\">\r\n//                 <button className=\"btn btn-primary\" onClick={handleSubmit}>Submit</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default OnePagePerSection;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}